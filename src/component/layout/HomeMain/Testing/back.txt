import React, { useDebugValue, useEffect  , useState} from 'react'
import { Carousel } from 'antd';
import "./productDetail.css"
import { useSelector,useDispatch } from 'react-redux'
import {getProductDetails, newReview} from "../../../actions/productAction"
import ReactStars from "react-rating-stars-component";
import ReviewCard from './ReviewCard'
import Loader from '../LoaderMain/loader'
import { useParams } from 'react-router-dom'
import {addItemTocart } from "../../../actions/cartAction"
import { Dialog , Rating ,Button, DialogActions ,DialogContent, DialogTitle} from '@mui/material';
import { NEW_REVIEW_RESET } from '../../../constants/productConstatns'
import { getProduct } from '../../../actions/productAction';
import SimilaProductCard from './TopBrandProduct/SimilaProductCard';
const ProductDetails = () => {
  
    const dispatch = useDispatch();
    const { id } = useParams();
    const {loading, error,product} = useSelector(
        (state)=>state.productDetails
     )
   
   const {products,productsCount} = useSelector(
         (state)=>state.products
   )
   const {success} = useSelector(
        (state)=>state.newReview
      )
   // const Reviews = product.review;
   const [catagory,setCatagory] = useState()
    
    useEffect(() => {
        if(success){
           dispatch({type:NEW_REVIEW_RESET});
          // alert("Updated suucess")
        }
       
        dispatch(getProduct(catagory))
        dispatch(getProductDetails(id))
  
     }, [dispatch,id ,success,catagory]);

     const options = {
      edit:false,
      color:"rgb(170, 170, 170)",
      activeColor:"rgb(251, 158, 52)",
      size:window.innerWidth < 600? 20 : 25,
      value:product.rating,
      isHalf:true
    }
    const [quantity,setQuantity] = useState(1);
    const [open, setOpen] = useState(false)
    const [rating, setRating] = useState(0)
    const [comment, setComment] = useState("")
   const decreaseQuntity = () =>{
      let qty = quantity - 1;
      if(quantity<1){
         qty=0
      }
      setQuantity(qty)
   }
   const increaseQuantity = () =>{
      if(product.Stock<=quantity) return;
      let qty = quantity + 1;
      setQuantity(qty)
   }
   const addTocartHandler= async() => {
     dispatch(addItemTocart(id,quantity));
     alert('Item added successfully')
   }

   const submitReviewToggle = ()=> {
      open ? setOpen(false) : setOpen(true)
   }
   const reviewSubmitHandlar =()=>{
        const myForm = new FormData();
        myForm.set("rating",rating);
        myForm.set("comment",comment);
        myForm.set("productId",id);

        dispatch(newReview(myForm));
        setOpen(false)
   }
  return (
      <>
        {loading ? <Loader/> :(
         <>
         {product && 
         <div className='product-detail-wrapper'>
                <div className='product-detail-container'>
                     <div className='carosleproduct-image-flex1'>
                     <Carousel autoplay>
                      {product.images &&  product.images.map((item,i)=>{ 
                       return ( <div>
                        <div className='image-carousel-productDetail'>
                              <img src={item.url} />
                        </div>
                        </div>)
   
                           })}    
                        </Carousel>
                     </div>
                     <div className='product-detail-flex2'>
                           <h2>{product.name}</h2>
                           <div className='product-rating'>
                               <p>{product.rating}</p><div><Rating  value={product.rating} size='small'/></div><p id='rating-count-tag'>{product.numOfReviews} reviews</p>
                           </div>
                           <p className='product-price'>₹{product.dPrice}<span id='B-discount-tag'>M.R.P. ₹{product.Price}</span></p>
                           
                           {product.catagory==="Clothes" &&
                              <div className='product-size'>
                                    <span>S</span>
                                    <span>M</span>
                                    <span>L</span>
                                    <span>XL</span>
                                    <span>XXL</span>
                              </div> 
                            }
                           
                           <div className='product-QTY'>
                                 <span ><button onClick={increaseQuantity}>+</button></span>
                                 <span>{quantity}</span>
                                 <span><button onClick={decreaseQuntity}>-</button></span>
                           </div>
                           <div className='AddToCart'>
                                <button onClick={addTocartHandler} >Add To Cart</button>
                           </div>
                           <p className='help-txt'>Free shipping order above ₹500</p>
                     </div>
                </div>

                <div className='product-description-review'>
                        <div className='review-section'>
                        <Dialog aria-labelledby='simple-dialog-title' open={open} onClose={submitReviewToggle}>
                           <DialogTitle>Submit Review</DialogTitle>
                           <DialogContent className='submitDialog'>
                              <Rating onChange={(e)=> setRating(e.target.value)} value={rating} size='large'/>
                              <textarea className='submitDialogTextArea' cols="30" rows="5" value={comment} onChange={(e)=> setComment(e.target.value)}>

                              </textarea>
                              <DialogActions>
                                 <Button onClick={submitReviewToggle}>Cancel</Button>
                                 <Button onClick={reviewSubmitHandlar}>Submit</Button>
                              </DialogActions>
                           </DialogContent>
                        </Dialog>
                           
                           {/* <h2 className='review-header'>Customer reviews <div><button onClick={submitReviewToggle} className='submitReview'>Submit Your Review</button></div></h2>
                              {Reviews && Reviews[0] ? (
                              <div>
                              {Reviews.map((rev)=><ReviewCard rev={rev}/>)}
                              </div>
                              ):(
                              <div className='no-review-yet'>
                                 <div>
                                     <img src='https://img.freepik.com/free-vector/reviews-concept-landing-page_52683-12186.jpg?w=740&t=st=1695228116~exp=1695228716~hmac=29726790c1984d28fcd2e6261f1ed864d05c66be10e528892dde46bd02c53728'/>
                                 </div>
                                 <p>No review Yet on this Product</p>
                                 <button onClick={submitReviewToggle} className='submitReview'>Review now</button>
                                 
                              </div>
                              
                              )} */}
                        </div>
                        <div className='description-section'>
                        <div> 
                           <h2>Description:</h2><p>{product.description}</p>
                           
                        </div>
                        
                        </div>
                </div>
    
             

         
         </div>}
              
         {/* <div className='ProductDetail'>
             
             <div className='product-detail-container'>
                     <div className='carosel flex-item-1'>
                        <Carousel>
                              {product.images &&  product.images.map((item,i)=>{
                              return  <img className='CarouselImage' key={item.url} src={item.url} alt='Product IMG'/>
                              })}
                        </Carousel>
                     </div>

                     <div className='flex-item-2'>
                        <div className='detailBlock-1'>
                                 <p>{product.name}</p>   
                        </div>
                        <div className='detailBlock-2'>
                              <ReactStars {...options}/>
                              <span>{product.numOfReviews} Review | ({product.rating} Rating)</span>
                        </div>
                        <hr></hr>
                        <div className='detailBlock-3'>
                           <p><sup>₹</sup>{product.Price}</p>
                           <div className='detailBlock-3-1'>
                              <div className='detailBlock-3-1-1'>
                                 <button onClick={decreaseQuntity} className='dbutton'>-</button>
                                 <input readOnly value={quantity} type='number'/>
                                 <button onClick={increaseQuantity} className='dbutton'>+</button>
                              </div>
                              <button disabled={product.Stock < 1 ? true:false} onClick={addTocartHandler} className='addtocartButton'>Add to cart</button>
                           </div>
                           <p className='product-status-tag'>
                           Status:{" "}
                           <b className={product.Stock<1 ? "redColor":"greenColor"}>
                              {product.Stock<1 ? "Out Of Stock":"In Stock"}
                           </b>
                           </p>
                        </div>
                        <div className='detailBlock-4'>
                           <b>Description:</b><p>{product.description}</p>
                        </div>
                        
                    </div>
             </div>
    
         </div> */}
    
         {/* <p className='review-header'>Customer reviews <ReactStars {...options}/> <button onClick={submitReviewToggle} className='submitReview'>Submit Your Review</button></p>
         
           <Dialog aria-labelledby='simple-dialog-title' open={open} onClose={submitReviewToggle}>
                <DialogTitle>Submit Review</DialogTitle>
                <DialogContent className='submitDialog'>
                  <Rating onChange={(e)=> setRating(e.target.value)} value={rating} size='large'/>
                  <textarea className='submitDialogTextArea' cols="30" rows="5" value={comment} onChange={(e)=> setComment(e.target.value)}>

                  </textarea>
                  <DialogActions>
                       <Button onClick={submitReviewToggle}>Cancel</Button>
                       <Button onClick={reviewSubmitHandlar}>Submit</Button>
                  </DialogActions>
                </DialogContent>
           </Dialog>
         
            {Reviews && Reviews[0] ? (
              <div>
              {Reviews.map((rev)=><ReviewCard rev={rev}/>)}
              </div>
            ):(<p>No review Yet on this Product</p>)} */}


         <div className='end-product-container'>
              <h2>More similar items</h2>
              
              <div className='end-product-cards-container'>
                      
                      {products && products.map((product)=> <SimilaProductCard product={product}/>)} 
              </div>
         </div>
        
       </>
        )}
     </>
  )
}

export default ProductDetails